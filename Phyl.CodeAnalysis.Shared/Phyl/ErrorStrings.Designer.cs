//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pchp.CodeAnalysis.Errors {
    using System;
    using System.Reflection;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Phyl.CodeAnalysis.Phyl.ErrorStrings", typeof(Phyl.CodeAnalysis.PhylCompiler).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular base class dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        public static string ERR_CircularBase {
            get {
                return ResourceManager.GetString("ERR_CircularBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening assembly file &apos;{0}&apos;: {1}.
        /// </summary>
        public static string ERR_ErrorOpeningAssemblyFile {
            get {
                return ResourceManager.GetString("ERR_ErrorOpeningAssemblyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata file &apos;{0}&apos; could not be found.
        /// </summary>
        public static string ERR_MetadataFileNotFound {
            get {
                return ResourceManager.GetString("ERR_MetadataFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is currently not supported by Peachpie..
        /// </summary>
        public static string ERR_NotYetImplemented {
            get {
                return ResourceManager.GetString("ERR_NotYetImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name &apos;{0}&apos; could not be resolved..
        /// </summary>
        public static string ERR_TypeNameCannotBeResolved {
            get {
                return ResourceManager.GetString("ERR_TypeNameCannotBeResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; cannot be declared..
        /// </summary>
        public static string ERR_UnknownTypeDependencies {
            get {
                return ResourceManager.GetString("ERR_UnknownTypeDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The declaration of &apos;{0}&apos; is ambiguous resulting in multiple versions to be compiled. Fix this issue by ensuring every base type is declared just once unconditionally..
        /// </summary>
        public static string WRN_AmbiguousDeclaration {
            get {
                return ResourceManager.GetString("WRN_AmbiguousDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of &apos;eval()&apos; is discouraged. Construct allows execution of arbitrary code and is subject to performance and memory overhead..
        /// </summary>
        public static string WRN_EvalDiscouraged {
            get {
                return ResourceManager.GetString("WRN_EvalDiscouraged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined function: &apos;{0}&apos;.
        /// </summary>
        public static string WRN_UndefinedFunctionCall {
            get {
                return ResourceManager.GetString("WRN_UndefinedFunctionCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined method: {0}::{1}().
        /// </summary>
        public static string WRN_UndefinedMethodCall {
            get {
                return ResourceManager.GetString("WRN_UndefinedMethodCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; not found.
        /// </summary>
        public static string WRN_UndefinedType {
            get {
                return ResourceManager.GetString("WRN_UndefinedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined variable: ${0}.
        /// </summary>
        public static string WRN_UninitializedVariableUse {
            get {
                return ResourceManager.GetString("WRN_UninitializedVariableUse", resourceCulture);
            }
        }
    }
}
